services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=200h'
    networks:
      - monitoring
    restart: unless-stopped
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./grafana/dashboards/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml:ro
      - ./grafana/dashboards:/etc/grafana/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - monitoring
    restart: unless-stopped
    secrets:
      - GF_SECURITY_ADMIN_PASSWORD

  rabbitmq:
    build: ./rabbit-mq
    container_name: rabbitmq
    ports:
      - "5672:5672" # AMQP port
      - "15692:15692" # Prometheus metrics port
      - "1883:1883" # MQTT port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbit-mq/definitions.template.json:/etc/rabbitmq/definitions.template.json:ro
      - ./rabbit-mq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    networks:
      - monitoring
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_port_connectivity" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    secrets:
      - RABBITMQ_ADMIN_PASSWORD_HASH

volumes:
  rabbitmq_data:
  grafana_data:
  prometheus_data:


networks:
  monitoring:
    driver: bridge

secrets:
  RABBITMQ_ADMIN_PASSWORD_HASH:
    file: ./rabbit-mq/secrets/admin-password-hash
  GF_SECURITY_ADMIN_PASSWORD:
    file: ./grafana/secrets/admin-password
